<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation=" http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/context/spring-context-4.1.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd">


	<!-- 启用spring mvc 注解 -->
    <context:annotation-config />
    <mvc:default-servlet-handler />
    
     <!-- 注解扫描 -->
	<context:component-scan base-package="main.java.controller,main.java.service,main.java.dao" />

	<!-- 静态资源访问 -->
	<mvc:resources mapping="/css/**" location="/css/" cache-period="31556926" />
	<mvc:resources mapping="/js/**" location="/js/" cache-period="31556926" />
	<mvc:resources mapping="/imgs/**" location="/imgs/" cache-period="31556926" />

	<!--页面视图层信息 -->
	<bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver"> 
		<property name="prefix" value="/WEB-INF/views/" />
		<property name="suffix" value=".jsp" />
		 <property name="viewClass" value="org.springframework.web.servlet.view.JstlView" />
	 </bean>
	 
	 <!-- 启动 Spring MVC 的注解功能，完成请求和注解 POJO 的映射 -->
  	<bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
    <property name="messageConverters">
      <list>
        <bean
          class="org.springframework.http.converter.StringHttpMessageConverter" />
      </list>
    </property>
  	</bean>
  	
  	<!-- maven项目请求不到 注解方式uri -->
	<bean class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping">
	    <property name="order" value="0" />
	</bean>

	<import resource="jdbc-context.xml" />
	
	<!-- SpringMVC上传文件时，需要配置MultipartResolver处理器 -->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="defaultEncoding" value="UTF-8"/>
		<!-- 指定所上传文件的总大小不能超过5000M(5000*1024*1024)。注意maxUploadSize属性的限制不是针对单个文件，而是所有文件的容量之和 -->
		<property name="maxUploadSize" value="5242880000"/>
	</bean>
	
	<!-- SpringMVC在超出上传文件限制时，会抛出org.springframework.web.multipart.MaxUploadSizeExceededException -->
	<!-- 该异常是SpringMVC在检查上传的文件信息时抛出来的，而且此时还没有进入到Controller方法中 -->
	<bean id="exceptionResolver" class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		<property name="exceptionMappings">
			<props>
				<!-- 遇到MaxUploadSizeExceededException异常时，自动跳转到/WEB-INF/jsp/error_fileupload.jsp页面 -->
				<prop key="org.springframework.web.multipart.MaxUploadSizeExceededException">error_fileupload</prop>
			</props>
		</property>
	</bean>
	 <!-- <bean id="springContext" class="com.stepsoft.aps.common.tool.SpringContext" scope="singleton"></bean> -->
</beans>
